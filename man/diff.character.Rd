% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diff.character.R
\name{diff.character}
\alias{diff.character}
\alias{diff}
\title{Compare Files}
\usage{
\method{diff}{character}(x, y, file = NULL, ignore = NULL, lines = FALSE,
  short = TRUE, similar = FALSE, simple = TRUE, ...)
}
\arguments{
\item{x}{a file or folder name.}

\item{y}{another file or folder name.}

\item{file}{if \code{x} and \code{y} are folders, then \code{file} can be
used to select a specific file that exists in both folders.}

\item{ignore}{patterns (regular expressions) to exclude from the output.}

\item{lines}{if \code{x} and \code{y} are folders, then \code{lines = TRUE}
compares the contents (lines) of files that exist in both folders,
instead of listing filenames that are different between the folders.}

\item{short}{whether to produce short file paths for the output.}

\item{similar}{whether to show similarities instead of differences.}

\item{simple}{whether to replace \code{character(0)} with \code{NULL} in
output, for compact display.}

\item{\dots}{passed to \code{readLines}.}
}
\value{
List showing differences as strings.
}
\description{
Show differences between files or folders.
}
\details{
When comparing folders, two kinds of differences can occur: (1) filenames
existing in one folder and not the other, and (2) files containing different
lines of text. The purpose of the \code{lines} argument is to select which of
those two kinds of differences to show.

If \code{x} and \code{y} are files (and not folders), the \code{file} and
\code{lines} arguments are not applicable and will be ignored.
}
\note{
File and folder names are of class \code{character} so \code{diff("pathA",
"pathB")} will dispatch this method to show the differences. There is no need
to call \code{diff.character} explicitly; a plain \code{diff} will do.

This function uses \code{setdiff} for the comparison, so line order, line
numbers, and repeated lines are ignored.

Subfolders are excluded when comparing folders, but can be examined in
subsequent calls.

This function has very basic features compared to full GUI applications such
as \emph{WinMerge} (Windows), \emph{Meld} (Linux, Windows), \emph{Kompare}
(Linux), \emph{Ediff} (Emacs), or the \command{diff} shell command. The use
of full GUI applications is recommended, but what this function offers in
addition is:

\itemize{
\item a quick diff tool that is handy during an interactive R session,
\item a programmatic interface to analyze file differences as native R
      objects, and
\item a tool that works on all operating systems, regardless of what software
      may be installed, which can be practical for teamwork and online
      workshops.
}

The \code{short} and \code{simple} defaults are designed for interactive
(human-readable) use, while \code{short = FALSE} and \code{simple = FALSE}
gives long-format output that can be useful for scripted analyses of file
differences.
}
\examples{
\dontrun{

# Compare two files
write(c("We", "are", "not"), file="one.txt")
write(c("We", "are", "the same"), file="two.txt")
diff("one.txt", "two.txt")
diff("one.txt", "two.txt", similar=TRUE)
file.remove("one.txt", "two.txt")

# Another example with two files
x <- system.file("DESCRIPTION", package="base")
y <- system.file("DESCRIPTION", package="stats")
diff(x, y)
diff(x, y, similar=TRUE)

# Filter out noise
diff(x, y, ignore=c("Package:", "Title:", "Description:", "Built:"))

# Compare filenames in two folders
A <- system.file(package="base")
B <- system.file(package="stats")
diff(A, B)                # these filenames are different
diff(A, B, ignore="^C")   # exclude entries starting with C
diff(A, B, similar=TRUE)  # these filenames exist in both folders

# Compare content of files that exist in both folders
diff(A, B, lines=TRUE)                # the INDEX files are very different
diff(A, B, lines=TRUE, similar=TRUE)  # but not completely different
diff(A, B, lines=TRUE, n=20)          # demonstrate passing n to readLines
diffs <- diff(A, B, lines=TRUE)       # store comparison as list
names(diffs)                          # these files are different
str(diffs, vec.len=1)                 # first difference in each file

# Alternative format
diff(A, B, ignore="^C")                             # short format
diff(A, B, ignore="^C", short=FALSE, simple=FALSE)  # long format

# Compare one file that exists in both folders
diff(x, y, "DESCRIPTION")  # same as diffs$DESCRIPTION
}

}
\seealso{
\code{\link[base]{diff}} is a generic function. Depending on \code{x}, it
will show differences between numbers, date-time objects, files, folders,
etc.

\code{\link{dir}}, \code{\link{readLines}}, and \code{\link{setdiff}} are the
underlying functions performing the file and folder comparison.

The \pkg{diffr} package provides a visually effective comparison of two files
in HTML format. Unlike the \code{diff} function, however, \pkg{diffr} does
not compare folders or return differences as native R objects.
}
